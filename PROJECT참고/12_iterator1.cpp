#include <vector>
#include <list>
#include <iostream>

int main()
{
	// 1. 배열을 연속된 메모리 입니다.
	//    따라서 시작 주소만 알면 ++ 연산자로 모든 요소에 접근 가능합니다.
	int x[5] = {1,2,3,4,5};
	int* p1 = x;
	
	++p1; // 다음요소로 이동해서
	std::cout << *p1 << std::endl; // 출력하므로 2

	// 2. linked list 라는 것은 모든 요소를 떨어진 메모리에 보관합니다.
	std::list<int> s = {1,2,3,4,5};
	
	// 모든 요소가 떨어진 행태로 있으므로 
	// 1번째 요소의 주소를 알아도 ++로 다음으로 할수는 없습니다.(진짜 포인터 라면)
	// 하지만 반복자는 것을 꺼내면 ++로 이동할수 있습니다.
	auto p2 = s.begin();	// 1번째 요소를 가리키는 반복자

	// p2 는 진짜 포인터는 아니지만 포인터 처럼 동작합니다.
	++p2;

	std::cout << *p2 << std::endl;

}