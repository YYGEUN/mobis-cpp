#include <vector>
#include <algorithm>

int main()
{
	std::vector<int> v = {1,2,3,4,5,6,7,8};

	// 1. 먼저 반복자 개념을 알아야 합니다.
	// 반복자 : vector 안에 요소를 가리키는 "포인터" 역활의 도구 입니다.
	//        진짜 포인터는 아니지만 포인터처럼 사용가능하게 만들었습니다.
	auto p1 = v.begin(); 
	auto p2 = v.end(); 

	// p1 은 v의 1번째 요소(1) 을 가리키는 포인터 라고 생각하면됩니다.
	// p2 는 마지막은 아니고 마지막 다음을 가리킨다고 생각하면 됩니다.
	//    따라서 절대 *p2 연산하면 안됩니다.
	*p1 = 10; // ok. 1번째 요소를 10으로 변경
//	*p2 = 10; // runtime error. 절대 이렇게 사용하지 마세요
				// p2 는 == 와 != 연산의 용도로만 사용하세요
	//================
	// 2. 이제 p1 을 포인터로 생각하세요
	std::cout << *p1 << std::endl; // 10
	++p1;
	std::cout << *p2 << std::endl; // 2

	// 3. p1, p2 를 사용한 모든 요소의 열거는 아래 처럼 하세요
	while ( p1 != p2 )
	{
		std::cout << *p1 << std::endl;
		++p1;
	}
}